<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>name</key>
        <string>Dyalect</string>

        <key>scopeName</key>
        <string>source.dy</string>

        <key>fileTypes</key>
        <array>
            <string>dy</string>
        </array>

        <key>patterns</key>
        <array>
            <dict>
                <key>include</key>
                <string>#keywords</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#strings</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#numeric</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#boolean</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#nil</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#comments</string>
            </dict>
        </array>

        <key>repository</key>
        <dict>
            <key>keywords</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:if|else|match|is|and|or|in|when|and|or|not)\b</string>
                        <key>name</key>
                        <string>keyword.control.branch.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:continue|break|yield|many|return)\b</string>
                        <key>name</key>
                        <string>keyword.control.transfer.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:do|while|for|in)\b</string>
                        <key>name</key>
                        <string>keyword.control.loop.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:catch|try|throw)\b|\btry[?!]\B</string>
                        <key>name</key>
                        <string>keyword.control.exception.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:let|var|set|auto)\b</string>
                        <key>name</key>
                        <string>keyword.other.declaration-specifier.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(type)\b</string>
                        <key>name</key>
                        <string>storage.type.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:private)\b</string>
                        <key>name</key>
                        <string>storage.modifier.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:func|static)\b</string>
                        <key>name</key>
                        <string>storage.type.function.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:nameof)\b</string>
                        <key>name</key>
                        <string>keyword.other.builtins</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(?:base|this)\b</string>
                        <key>name</key>
                        <string>variable.language.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(?&lt;!\.)\b(import)\b</string>
                        <key>name</key>
                        <string>keyword.control.import.dyalect</string>
                    </dict>
                </array>
            </dict>
            <key>strings</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>"""</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.dyalect</string>
                            </dict>
                        </dict>
                        <key>comment</key>
                        <string>SE-0168: Multi-Line String Literals</string>
                        <key>end</key>
                        <string>"""</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.dyalect</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.quoted.double.block.dyalect</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>match</key>
                                <string>\G.+(?=""")|\G.+</string>
                                <key>name</key>
                                <string>invalid.illegal.content-after-opening-delimiter.dyalect</string>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>\\\s*\n</string>
                                <key>name</key>
                                <string>constant.character.escape.newline.dyalect</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string-guts</string>
                            </dict>
                            <dict>
                                <key>comment</key>
                                <string>Allow \("""...""") to appear inside a block string</string>
                                <key>match</key>
                                <string>\S((?!\\\().)*(?=""")</string>
                                <key>name</key>
                                <string>invalid.illegal.content-before-closing-delimiter.dyalect</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>"</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.dyalect</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>"</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.dyalect</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.quoted.double.single-line.dyalect</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>match</key>
                                <string>\r|\n</string>
                                <key>name</key>
                                <string>invalid.illegal.returns-not-allowed.dyalect</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>#string-guts</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>'</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.dyalect</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>'</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.dyalect</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.quoted.single.dyalect</string>
                    </dict>
                </array>
                <key>repository</key>
                <dict>
                    <key>string-guts</key>
                    <dict>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>match</key>
                                <string>\\[0\\tnr"']</string>
                                <key>name</key>
                                <string>constant.character.escape.dyalect</string>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>\\u\{[0-9a-fA-F]{1,8}\}</string>
                                <key>name</key>
                                <string>constant.character.escape.unicode.dyalect</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>\\\(</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>punctuation.section.embedded.begin.dyalect</string>
                                    </dict>
                                </dict>
                                <key>contentName</key>
                                <string>source.dyalect</string>
                                <key>end</key>
                                <string>(\))</string>
                                <key>endCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>punctuation.section.embedded.end.dyalect</string>
                                    </dict>
                                    <key>1</key>
                                    <dict>
                                        <key>name</key>
                                        <string>source.dyalect</string>
                                    </dict>
                                </dict>
                                <key>name</key>
                                <string>meta.embedded.line.dyalect</string>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>$self</string>
                                    </dict>
                                    <dict>
                                        <key>begin</key>
                                        <string>\(</string>
                                        <key>comment</key>
                                        <string>Nested parens</string>
                                        <key>end</key>
                                        <string>\)</string>
                                    </dict>
                                </array>
                            </dict>
                            <dict>
                                <key>match</key>
                                <string>\\.</string>
                                <key>name</key>
                                <string>invalid.illegal.escape-not-recognized</string>
                            </dict>
                        </array>
                    </dict>
                </dict>
            </dict>
            <key>numeric</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>comment</key>
                        <string>0.1, -4_2.5, 6.022e23, 10E-5</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)[0-9][0-9_]*(?=\.[0-9]|[eE])(?:\.[0-9][0-9_]*)?(?:[eE][-+]?[0-9][0-9_]*)?\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>constant.numeric.float.decimal.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>-0x1.ap2_3, 0x31p-4</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)(?:\.[0-9a-fA-F][0-9a-fA-F_]*)?[pP][-+]?[0-9][0-9_]*\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>constant.numeric.float.hexadecimal.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>0x1p, 0x1p_2, 0x1.5pa, 0x1.1p+1f, 0x1pz</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)(?:\.[0-9a-fA-F][0-9a-fA-F_]*)?(?:[pP][-+]?\w*)\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>invalid.illegal.numeric.float.invalid-exponent.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>0x1.5w (note that 0x1.f may be a valid expression)</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)\.[0-9][\w.]*</string>
                        <key>name</key>
                        <string>invalid.illegal.numeric.float.missing-exponent.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>-.5, .2f (note that 1.-.5 may be a valid expression)</string>
                        <key>match</key>
                        <string>(?&lt;=\s|^)\-?\.[0-9][\w.]*</string>
                        <key>name</key>
                        <string>invalid.illegal.numeric.float.missing-leading-zero.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>0b_0_1, 0x_1p+3q</string>
                        <key>match</key>
                        <string>(\B\-|\b)0[box]_[0-9a-fA-F_]*(?:[pPeE][+-]?\w+)?[\w.]+</string>
                        <key>name</key>
                        <string>invalid.illegal.numeric.leading-underscore.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>tuple positional member: not really a numeric literal, but not invalid</string>
                        <key>match</key>
                        <string>(?&lt;=[\[\](){}\p{L}_\p{N}\p{M}]\.)[0-9]+\b</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>0b010, 0b1_0</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)0b[01][01_]*\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>constant.numeric.integer.binary.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>0o1, 0o7_3</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)0o[0-7][0-7_]*\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>constant.numeric.integer.octal.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>02, 3_456</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)[0-9][0-9_]*\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>constant.numeric.integer.decimal.dyalect</string>
                    </dict>
                    <dict>
                        <key>comment</key>
                        <string>0x4, 0xF_7</string>
                        <key>match</key>
                        <string>(\B\-|\b)(?&lt;![\[\](){}\p{L}_\p{N}\p{M}]\.)0x[0-9a-fA-F][0-9a-fA-F_]*\b(?!\.[0-9])</string>
                        <key>name</key>
                        <string>constant.numeric.integer.hexadecimal.dyalect</string>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>(\B\-|\b)[0-9][\w.]*</string>
                        <key>name</key>
                        <string>invalid.illegal.numeric.other.dyalect</string>
                    </dict>
                </array>
            </dict>
            <key>boolean</key>
            <dict>
                <key>match</key>
                <string>\b(true|false)\b</string>
                <key>name</key>
                <string>constant.language.boolean.dyalect</string>
                <key>patterns</key>
                <array/>
            </dict>
            <key>nil</key>
            <dict>
                <key>match</key>
                <string>\b(nil)\b</string>
                <key>name</key>
                <string>constant.language.nil.dyalect</string>
                <key>patterns</key>
                <array/>
            </dict>
            <key>comments</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.dyalect</string>
                            </dict>
                        </dict>
                        <key>match</key>
                        <string>\A^(#!).*$\n?</string>
                        <key>name</key>
                        <string>comment.line.number-sign.dyalect</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>/\*\*(?!/)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.begin.dyalect</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\*/</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.end.dyalect</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>comment.block.documentation.dyalect</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#nested</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>/\*:</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.begin.dyalect</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\*/</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.end.dyalect</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>comment.block.documentation.playground.dyalect</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#nested</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>/\*</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.begin.dyalect</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\*/</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.end.dyalect</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>comment.block.dyalect</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#nested</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>match</key>
                        <string>\*/</string>
                        <key>name</key>
                        <string>invalid.illegal.unexpected-end-of-block-comment.dyalect</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(^[ \t]+)?(?=//)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.whitespace.comment.leading.dyalect</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?!\G)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string>///</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>punctuation.definition.comment.dyalect</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>^</string>
                                <key>name</key>
                                <string>comment.line.triple-slash.documentation.dyalect</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>//:</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>punctuation.definition.comment.dyalect</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>^</string>
                                <key>name</key>
                                <string>comment.line.double-slash.documentation.dyalect</string>
                            </dict>
                            <dict>
                                <key>begin</key>
                                <string>//</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>0</key>
                                    <dict>
                                        <key>name</key>
                                        <string>punctuation.definition.comment.dyalect</string>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>^</string>
                                <key>name</key>
                                <string>comment.line.double-slash.dyalect</string>
                            </dict>
                        </array>
                    </dict>
                </array>
                <key>repository</key>
                <dict>
                    <key>nested</key>
                    <dict>
                        <key>begin</key>
                        <string>/\*</string>
                        <key>end</key>
                        <string>\*/</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#nested</string>
                            </dict>
                        </array>
                    </dict>
                </dict>
            </dict>
        </dict>
        <key>scopeName</key>
        <string>source.dyalect</string>
    </dict>
</plist>